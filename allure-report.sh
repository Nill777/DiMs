#!/bin/bash
# Этот скрипт автоматизирует создание единого Allure отчета для многомодульного Gradle проекта

# Немедленно завершить скрипт, если какая-либо команда завершится с ошибкой
set -e

echo "--- Запуск тестов для всех модулей ---"
# Флаг --continue гарантирует, что тесты запустятся во всех модулях, даже если в одном из них возникнет ошибка
# Это полезно, чтобы увидеть в отчете упавшие тесты
./gradlew test --continue || echo "Обнаружены упавшие unit/интеграционные тесты. Генерация отчета будет продолжена..."
./gradlew app:runAndroidTestsWithoutUninstallForGetAllureData --continue || echo "Обнаружены упавшие инструментальные тесты. Генерация отчета будет продолжена..."
# Имя папки, куда будут скопированы все результаты
CONSOLIDATED_RESULTS_DIR="build/allure-results"

# Удаляем старую папку с общими результатами, если она существует
rm -rf $CONSOLIDATED_RESULTS_DIR
# И создаем ее заново, чтобы она была пустой
mkdir -p $CONSOLIDATED_RESULTS_DIR

# Ищем все папки 'allure-results' внутри поддиректорий build
# и копируем их *содержимое* в нашу общую папку
# find ... -print0 | while ... - это надежный способ обработки путей с пробелами (хотя в Gradle это редкость)
# -not -path "./build/*" — это условие для find, которое отсекает все, что внутри ./build
echo "Поиск результатов во всех модулях..."
find . -path "*/build/allure-results" -not -path "./build/*" -print0 |
while IFS= read -r -d '' dir; do
    echo "Найдены результаты в '$dir'. Копирование..."
    # Копируем содержимое директории (включая скрытые файлы, если есть) в общую папку
    cp -r "$dir"/. "$CONSOLIDATED_RESULTS_DIR"/
done

echo "--- Запуск Allure для сгенерированного отчета ---"
# Allure сам сгенерирует отчет и откроет его в браузере
allure serve $CONSOLIDATED_RESULTS_DIR
